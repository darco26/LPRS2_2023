#! /usr/bin/env python
# encoding: utf-8

'''
@author: Milos Subotic <milos.subotic.sm@gmail.com>
@license: MIT

'''

###############################################################################

from common_waf import *


###############################################################################

def prerequisites(ctx):
	pass

def options(opt):
	opt.load('gcc gxx')
	
	opt.add_option(
		'--app',
		dest = 'app',
		default = None,
		help = 'App to be run'
	)
	
def configure(cfg):
	cfg.load('gcc gxx')
	
	cfg.env.append_value('CFLAGS', '-std=c99')
	cfg.env.append_value('CXXFLAGS', '-std=c++11')


def build(bld):
	bld.stlib(
		source = 'UART.cpp',
		includes = '.',
		export_includes = '.',
		target = 'UART'
	)
	
	for code_file in glob_apps_srcs(bld, filter_regex = '[a-z0-9].*'):
		name = os.path.splitext(code_file)[0]
		bld.program(
			features = 'cxx',
			source = [code_file],
			use = 'UART',
			target = name
		)
	

def run(ctx):
	'''./waf run --app=<NAME>'''
	if ctx.options.app:
		a = expand_app(ctx.options.app)
		ctx.exec_command2('serial_on')
		#ctx.exec_command2('ls -ll /dev/ttyUSB0')
		ctx.exec_command2('sleep 1')
		#ctx.exec_command2('ls -ll /dev/ttyUSB0')
		ctx.exec_command2('./build/' + a)
		ctx.exec_command2('serial_off')
		

###############################################################################
